
package admin;

import Entidades.Productos;
import Modelos.ModelProductos;
import Entidades.Proveedores;
import Modelos.ModelProveedores;

import admin.frmAdmin;

import clases.conexion;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class frmAdminBodega extends javax.swing.JFrame {
    conexion con=null;
    DefaultListModel modelstProductos = new DefaultListModel();
   
    public frmAdminBodega() {
        initComponents();
        llenarProveedores();
        llenarProductos();
        lstProducto.setModel(modelstProductos);
        
        con= new conexion();
        this.setLocationRelativeTo(null);
        
    }
    
    private void llenarProductos(){
        ModelProductos modProductos = new ModelProductos();
        ArrayList<Productos> listaProductos =  modProductos.getProductos();
        modelstProductos.removeAllElements();
        for (int i = 0; i < listaProductos.size(); i++){
            modelstProductos.addElement(listaProductos.get(i));
    }
    
    }
    
    private void llenarProveedores(){
        ModelProveedores modProveedor = new ModelProveedores();
        ArrayList<Proveedores> listaProveedores = modProveedor.getProveedores();
        cmbProveedor.removeAllItems();
    
        for(int i = 0; i < listaProveedores.size(); i ++   ){
             cmbProveedor.addItem(new Proveedores(listaProveedores.get(i).getId_proveedor(), listaProveedores.get(i).getNom_proveedor()));
         }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProducto = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        lblMarca = new javax.swing.JLabel();
        lblDetalle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetalle = new javax.swing.JTextArea();
        txtStock = new javax.swing.JTextField();
        lblStock = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        lblValor = new javax.swing.JLabel();
        lblProveedor = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbProveedor = new javax.swing.JComboBox<>();
        txtBuscarProd = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(989, 627));
        jPanel1.setMinimumSize(new java.awt.Dimension(989, 627));

        lstProducto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lstProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstProducto);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("Administrar Bodega");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtId.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtId.setFocusable(false);

        lblNombre.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblNombre.setText("NOMBRE:");

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblId.setText("ID:");

        txtMarca.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        lblMarca.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblMarca.setText("MARCA:");

        lblDetalle.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblDetalle.setText("DETALLE:");

        txtDetalle.setColumns(20);
        txtDetalle.setRows(5);
        jScrollPane2.setViewportView(txtDetalle);

        txtStock.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        lblStock.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblStock.setText("STOCK:");

        txtValor.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        lblValor.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblValor.setText("VALOR: $");

        lblProveedor.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblProveedor.setText("PROVEEDOR:");

        btnIngresar.setText("Ingresar Nuevo Producto");
        btnIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar Producto");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar Producto");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setText("Volver");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel2.setText("Bienvenido: UserNotFound");

        cmbProveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblProveedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblNombre)
                                        .addComponent(lblId)
                                        .addComponent(lblMarca)
                                        .addComponent(lblDetalle)
                                        .addComponent(lblStock)
                                        .addComponent(lblValor))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2)
                                        .addComponent(txtMarca)
                                        .addComponent(txtNombre)
                                        .addComponent(txtId)
                                        .addComponent(txtStock, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtValor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnIngresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(txtBuscarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtBuscarProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMarca))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDetalle)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStock)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValor))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProveedor)
                            .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:

        int ver;

        ver=JOptionPane.showConfirmDialog(null,"¿Esta Seguro de salir? Los DATOS NO GUARDADOS se perderan","Login Error",JOptionPane.OK_CANCEL_OPTION);

        if (ver==0){
            frmAdmin frmA=new frmAdmin();
            frmA.setVisible(true);
            dispose();
        }

    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        // TODO add your handling code here:
        
        
        
        int ver;
        boolean verificar=true;//verificar valida si todas los demas campos son correctos, en caso de que no sea asi, este manda un "true" e indica que es incorrecto

        ver=JOptionPane.showConfirmDialog(null, "¿Esta seguro de que los datos son correctos?","Confirmar Ingreso de Datos", JOptionPane.OK_CANCEL_OPTION);

        lblNombre.setForeground(Color.black);
        lblMarca.setForeground(Color.black);
        lblStock.setForeground(Color.black);
        lblValor.setForeground(Color.black);
        lblProveedor.setForeground(Color.black);

        if (ver==0){
            try{
                //Verifica que el txtNombre posea texto. verificar que el nombre no se repita es opcional
                if("".equals(txtNombre.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Ingrese un Nombre","Error Nombre",JOptionPane.ERROR_MESSAGE);
                    verificar=false;
                    lblNombre.setForeground(Color.red);
                }
                //verifica que el txtMarca posea texto
                if("".equals(txtMarca.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Ingrese una Marca","Error Marca",JOptionPane.ERROR_MESSAGE);
                    verificar=false;
                    lblMarca.setForeground(Color.red);
                }
                //verifica que txtStock Posea algo
                if ("".equals(txtStock.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Ingrese un Numero","Error Stock",JOptionPane.ERROR_MESSAGE);
                    verificar=false;
                    lblStock.setForeground(Color.red);
                }else{
                    try{
                        //cambiar el tipo de dato de stock, ajustarlo a Short para mas manejo de productos
                        //verifica que txtStock no sea menor a 0 y mayor a 1000
                        if(Byte.parseByte(txtStock.getText())<=0 && Byte.parseByte(txtStock.getText())>1000){
                            JOptionPane.showMessageDialog(null, "Error. Ingrese un Numero MENOR a 0 o MAYOR a 1000, para poder Guardar el dato cambie el valor del campo correpondiente","Error Stock",JOptionPane.ERROR);
                            lblStock.setForeground(Color.red);
                            verificar=false;
                        }
                    }catch(Exception exStock){
                        JOptionPane.showMessageDialog(null, "Error. Se detecto el ingreso de un dato NO NUMERICO en el Campo Stock\n" + "Detalle del Error: " + exStock,"System Error", JOptionPane.ERROR_MESSAGE);
                        lblStock.setForeground(Color.red);
                        verificar=false;
                    }
                }

                if ("".equals(txtValor.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Ingrese un Valor","Error Stock",JOptionPane.ERROR_MESSAGE);
                    lblValor.setForeground(Color.red);
                    verificar=false;
                }else{
                    //generar try nuevamente
                    try{
                        if (Integer.parseInt(txtValor.getText())<=0){
                            JOptionPane.showMessageDialog(null, "Error. Ingrese un Valor MAYOR a 0 para poder Guardar el dato","Error Precio",JOptionPane.ERROR_MESSAGE);
                            lblValor.setForeground(Color.red);
                            verificar=false;
                        }
                    }catch(Exception exValor){
                        JOptionPane.showMessageDialog(null,"Error. Se detecto el ingreso de un dato NO NUMERICO en el Campo Valor\nDetalle del Error: " + exValor,"System Error", JOptionPane.ERROR_MESSAGE);
                        lblValor.setForeground(Color.red);
                        verificar=false;
                    }
                }
                
                String pro=(String) cmbProveedor.getSelectedItem();
                
                if(pro=="N/S"){
                    JOptionPane.showMessageDialog(null, "Error. No se a seleccionado un proveedor","Error Proveedor",JOptionPane.ERROR_MESSAGE);
                }

                if (verificar==true){
                    JOptionPane.showMessageDialog(null, "Se a Ingresado un Producto correctamente","Nuevo Producto",JOptionPane.INFORMATION_MESSAGE);
                }

            }catch(Exception ex){

                JOptionPane.showMessageDialog(null,"Error. Funcionamiento inesperado en el Sistema.\n"+"Error: "+ex, "Error System", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        
        //el comboBox de Proveedor no se actualiza, ya que este es solo para añadir a los proveedores. hay que ver como añadir mas proveedores
        
        int ver;
        boolean verificar=true;//verificar valida si todas los demas campos son correctos, en caso de que no sea asi, este manda un "true" e indica que es incorrecto

        ver=JOptionPane.showConfirmDialog(null, "Va a Actualizar los datos de esta tabla\n¿Esta seguro de que los datos son correctos?","Confirmar Actualizacion de Datos", JOptionPane.OK_CANCEL_OPTION);

        lblNombre.setForeground(Color.black);
        lblMarca.setForeground(Color.black);
        lblStock.setForeground(Color.black);
        lblValor.setForeground(Color.black);
        lblProveedor.setForeground(Color.black);
        // variables
        
        //ingreso de datos en las variables. Ajustar los datos para que estos entreguen los datos de la Base de datos
        
        if (ver==0){
            try{
                //Verifica que el txtNombre posea texto. verificar que el nombre no se repita es opcional
                if("".equals(txtNombre.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Esta intentando Actualizar el nombre a un valor vacio","Error Nombre",JOptionPane.ERROR_MESSAGE);
                    verificar=true;
                    lblNombre.setForeground(Color.red);
                }
                //verifica que el txtMarca posea texto
                if("".equals(txtMarca.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Esta intentando Actualizar la Marca a un valor vacio","Error Marca",JOptionPane.ERROR_MESSAGE);
                    verificar=false;
                    lblMarca.setForeground(Color.red);
                }
                //verifica que txtStock Posea algo
                if ("".equals(txtStock.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Esta intentando actualizar Stock a un dato vacio\nFavor de ingresar nuevamente","Error Stock",JOptionPane.ERROR_MESSAGE);
                    verificar=false;
                    lblStock.setForeground(Color.red);
                }else{
                    try{
                        //cambiar el tipo de dato de stock, ajustarlo a Short para mas manejo de productos
                        //verifica que txtStock no sea menor a 0 y mayor a 1000
                        if(Byte.parseByte(txtStock.getText())<0 && Byte.parseByte(txtStock.getText())>1000){
                            JOptionPane.showMessageDialog(null, "Error. Ingrese un Numero IGUAL o MAYOR a 0 y MENOR a 1000, para poder Guardar el cambio de Stock","Error Stock",JOptionPane.ERROR);
                            lblStock.setForeground(Color.red);
                            verificar=false;
                        }
                    }catch(Exception exStock){
                        JOptionPane.showMessageDialog(null, "Error. Se detecto el ingreso de un dato NO NUMERICO en el Campo Stock\n" + "Detalle del Error: " + exStock,"System Error", JOptionPane.ERROR_MESSAGE);
                        lblStock.setForeground(Color.red);
                        verificar=false;
                    }
                }

                if ("".equals(txtValor.getText())){
                    JOptionPane.showMessageDialog(null, "Error. Esta intentando actualizar Valor a un dato vacio\nFavor de ingresar nuevamente","Error Stock",JOptionPane.ERROR_MESSAGE);
                    lblValor.setForeground(Color.red);
                    verificar=false;
                }else{
                    //generar try nuevamente
                    try{
                        if (Integer.parseInt(txtValor.getText())<=0){
                            JOptionPane.showMessageDialog(null, "Error. Ingrese un Valor MAYOR a 0 para poder Guardar el dato","Error Precio",JOptionPane.ERROR_MESSAGE);
                            lblValor.setForeground(Color.red);
                            verificar=false;
                        }
                    }catch(Exception exValor){
                        JOptionPane.showMessageDialog(null,"Error. Se detecto el ingreso de un dato NO NUMERICO en el Campo Valor\n"+"Detalle del Error: " + exValor,"System Error", JOptionPane.ERROR_MESSAGE);
                        lblValor.setForeground(Color.red);
                        verificar=false;
                    }
                }

                if (verificar==true){
                    JOptionPane.showMessageDialog(null, "Se Actualizo el Producto","Actualizar Producto",JOptionPane.INFORMATION_MESSAGE);
                }

            }catch(Exception ex){

                JOptionPane.showMessageDialog(null,"Error. Funcionamiento inesperado en el Sistema.\n"+"Error: "+ex, "Error System", JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cmbProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProveedorActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int ver;
        
        ver=JOptionPane.showConfirmDialog(null, "Va a ELIMINAR los datos de este producto\n¿Esta seguro de ELIMINAR este producto?","Confirmar ELIMINACION de producto", JOptionPane.OK_CANCEL_OPTION);
        
        if (ver==0){
            JOptionPane.showMessageDialog(null, "Producto ELIMINADO correctamente","Producto Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void lstProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstProductoMouseClicked
        // TODO add your handling code here:

        txtId.setText();
    }//GEN-LAST:event_lstProductoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAdminBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAdminBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAdminBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAdminBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAdminBodega().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<Proveedores> cmbProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDetalle;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblValor;
    private javax.swing.JList<Productos> lstProducto;
    private javax.swing.JTextField txtBuscarProd;
    private javax.swing.JTextArea txtDetalle;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}


